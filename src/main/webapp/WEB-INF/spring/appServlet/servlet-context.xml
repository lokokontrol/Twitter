<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
 xmlns:p="http://www.springframework.org/schema/p"
 xmlns:beans="http://www.springframework.org/schema/beans"
 xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
 xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

 <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
 
 <!-- Enables the Spring MVC @Controller programming model -->
 <annotation-driven />
 <context:component-scan base-package="fdi.myproyect.twitter" />


 <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
 <resources mapping="/resources/**" location="/resources/" />
 
 

<!-- org.thymeleaf.templateresolver.ServletContextTemplateResolver -->
 <beans:bean  id="templateResolver" class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
     <beans:property name="prefix" value="/WEB-INF/views/" />
     <beans:property name="suffix" value=".html" />
     <beans:property name="templateMode" value="HTML5" />
  </beans:bean>
  
  <beans:bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
    <beans:property name="templateResolver" ref="templateResolver" />
 </beans:bean>
 
   <beans:bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
      <beans:property name="templateEngine" ref="templateEngine" />
     </beans:bean> 
  
 
  <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
 <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
  <beans:property name="prefix" value="/WEB-INF/views/" />
  <beans:property name="suffix" value=".jsp" />
 </beans:bean>


 <beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	  <beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
	  <beans:property name="url"
	   value="jdbc:mysql://localhost:3306/twitterdb" />
	  <beans:property name="username" value="david" />
	  <beans:property name="password" value="david123" />
 </beans:bean>
 
 <!-- Hibernate + EntityManagerFactory configuration -->

 <beans:bean id="jpaVendorAdapter"
  class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />


 <beans:bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
	  <beans:property name="dataSource" ref="dataSource" />
	  <beans:property name="packagesToScan">
	 	  <beans:array>
	   		<beans:value>fdi.myproyect.twitter.entidades</beans:value>
	 	  </beans:array>
 	  </beans:property> 
  	  <beans:property name="jpaVendorAdapter" ref="jpaVendorAdapter">
 	  </beans:property>  
  	  <beans:property name="jpaProperties">
   		<beans:props>
    		<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
  		</beans:prop>
    		<beans:prop key="hibernate.hbm2ddl.auto">create-drop</beans:prop>
   			<beans:prop key="hibernate.show_sql">true</beans:prop>
   		</beans:props>
 	  </beans:property>
 </beans:bean> 

<!-- Spring Platform's TransactionManager configuration -->

 <beans:bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
  p:entityManagerFactory-ref="entityManagerFactory" />

 <!-- Enables the use of @Transactional and configures Spring to create class 
  based proxies instead of JDK Proxy, that only supports the creation of interface 
  proxies -->
 <tx:annotation-driven transaction-manager="transactionManager"
  mode="proxy" proxy-target-class="true" />  
   
</beans:beans>